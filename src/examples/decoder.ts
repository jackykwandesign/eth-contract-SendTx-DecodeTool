// this example show how @bitgo/eth-contracts decode the Contract
// the result used for decode contract transactions, which sendMultiSig and sendMultiSigToken support most of exchange

import { Decoder } from '@bitgo/eth-contracts';
const decoder = new Decoder();
const decodedData = decoder.decode(Buffer.from('a9059cbb00000000000000000000000010d4f942617a231eb1430c88fe43c8c2050437d90000000000000000000000000000000000000000000000000000000000002710', 'hex'));
const decodedDataBitgo = decoder.decode(Buffer.from('391252150000000000000000000000005e77d4f6ae03d14831a36f3de7191dc75eb350d2000000000000000000000000000000000000000000000000002db3f54781600000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000602498a1000000000000000000000000000000000000000000000000000000000000002d00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041ded431dfc645e1d29c3753be8d05566a350584ddd098285f0c2a3a09e36654d578803cc9f057e234addef447d3dec6527fa37050deb39f5f143802ba58b06c311c00000000000000000000000000000000000000000000000000000000000000', 'hex'));
// const decodedDataTest = decoder.decode(Buffer.from('a68a76cc', 'hex'));
const decodedDataSendMultiSig = decoder.decode(Buffer.from('3912521500000000000000000000000060a55f6709c30babef694396f11cc2c843d8b3980000000000000000000000000000000000000000000000002d3c87518951d9e000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000005fc188240000000000000000000000000000000000000000000000000000000000009fbd00000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000417dfea46e3563aa94c78e37c2e7932a423905b6491bde11940e00095c41f12969389644fdde6f6c14360b00e4d5a048958bb947e0cce3a64bbe3d44ffa9cebc681b00000000000000000000000000000000000000000000000000000000000000', 'hex'));
const decodedSendMultiSigToken = decoder.decode(Buffer.from('0dcd7a6c000000000000000000000000d1669ac6044269b59fa12c5822439f609ca54f4100000000000000000000000000000000000000000000000000000001486bed800000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c59900000000000000000000000000000000000000000000000000000000602a09cc00000000000000000000000000000000000000000000000000000000000068f100000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000415f2cb6bd7756774420af2852ce0d744f09f226adc032d141702b3bbcef6006c33a2132aa1f54e79d36db3db0018658a6836545ea53708f1402bf98d497c437d31b00000000000000000000000000000000000000000000000000000000000000', 'hex'));
const decodedSendMultiSigBitstamp = decoder.decode(Buffer.from('3912521500000000000000000000000061dcfe4f711c529a366b4f723b000ba3897cb3b500000000000000000000000000000000000000000000000000c901d63e60c40000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000602a2ed900000000000000000000000000000000000000000000000000000000000b060800000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041b6958c84f2f67591d7ed50cb85f0bc26f787d92c5360a982630bc95c22879f3275fdb54bf2f905d9010c2b4eb2343114984fd37633d440057827f473dab4d7121b00000000000000000000000000000000000000000000000000000000000000', 'hex'));


console.log("decodedData", decodedData)
console.log("decodedDataBitgo", decodedDataBitgo)
// console.log("decodedDataTest", decodedDataTest)
console.log("decodedDataSendMultiSig", decodedDataSendMultiSig)
console.log("decodedSendMultiSigToken", decodedSendMultiSigToken)
console.log("decodedSendMultiSigBitstamp", decodedSendMultiSigBitstamp)